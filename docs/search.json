[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "What is the cause of the increase in UFO sightings?",
    "section": "",
    "text": "Since the beginning of the 20th century we have reported UFO sightings. What this project is trying to do is to look at the trend of the UFO sightings and try to explain them in a way which is not attributed to an increase in actual UFOs. Since a major part of the sightings are in the US (which already debunks the idea of UFOs actually being aliens) we are only focusing on that data.\n\nTime series plot\nThe first thing relevant to look at is the development of number of UFO sightings over the last decade. The first sighting in the data set is from 1910. But since they are so few sightings we choose to look at sightings from 1950 to 2014. Other than the number of sightings we also look at different popular shows and movies of different years to see if we might see their impact\nIf we look at the\n\n\nCode\n#hourtime=df[\"time\"]=df[\"datetime\"].dt.hour\n#plt.hist(hourtime, bins=24, range=(0, 24), density=True, alpha=0.5, color='blue')\n#plt.xlabel('Hour of the Day')\n\n\n\n\nHeatmap\n\n\nCode\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ndata = pd.read_csv(\"data/complete.csv\", on_bad_lines='skip')\ndata['datetime'] = pd.to_datetime(data['datetime'], errors='coerce')\ndf=data[data[\"country\"]==\"us\"].sort_index(level=\"datetime\")\ndf = df.dropna(subset=['datetime'])\ndf = df.sort_values(by='datetime').reset_index(drop=True)\ndf=df.dropna()\n\nfrom folium import plugins\nfrom folium.plugins import HeatMap\nimport folium\nfrom branca.element import Template, MacroElement\n\nmilbases=pd.read_csv(\"data/clean_military_bases.csv\")\nmilcomp=milbases[\"component\"]\nletters=[i[0:2] for i in milbases[\"component\"]]\n\nmilbases=milbases[(milcomp==\"AF Guard\" ) |(milcomp==\"AF Reserve\" )| (milcomp==\"AF Active\")]\n\nmilbasesl=milbases[[\"latitude\",\"longitude\"]]\n\n# Create your map\nmap_hooray = folium.Map(location=[40.80887462217925, -101.64736435756755], zoom_start=4)\n\n# Process your heatmap data\ndf['latitude'] = df['latitude'].astype(float)\ndf['longitude'] = df['longitude'].astype(float)\nheat_df = df[['latitude', 'longitude']].dropna()\nheat_data = [[row['latitude'], row['longitude']] for index, row in heat_df.iterrows()]\n\n# Add heatmap with adjusted parameters for less density\nHeatMap(\n    heat_data,\n    radius=5,             # smaller spread\n    blur=1,               # smoother blending\n    max_opacity=0.5,       # reduce color saturation\n    min_opacity=0.3,       # allow fade for low-density areas\n    use_local_extrema=False  # keep global scale\n).add_to(map_hooray)\n\n# Add circle markers for different components\nfor index, row in milbasesl[milcomp == \"AF Reserve\"].iterrows():\n    folium.CircleMarker(\n        location=[row['latitude'], row['longitude']],\n        radius=3,\n        color='magenta',\n        fill=True,\n        fill_color='magenta',\n        fill_opacity=0.6\n    ).add_to(map_hooray)\n\nfor index, row in milbasesl[milcomp == \"AF Active\"].iterrows():\n    folium.CircleMarker(\n        location=[row['latitude'], row['longitude']],\n        radius=3,\n        color='red',\n        fill=True,\n        fill_color='red',\n        fill_opacity=0.6\n    ).add_to(map_hooray)\n\nfor index, row in milbasesl[milcomp == \"AF Guard\"].iterrows():\n    folium.CircleMarker(\n        location=[row['latitude'], row['longitude']],\n        radius=3,\n        color='green',\n        fill=True,\n        fill_color='green',\n        fill_opacity=0.6\n    ).add_to(map_hooray)\n\n# Custom legend (unchanged)\ntemplate = \"\"\"\n{% macro html(this, kwargs) %}\n&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;title&gt;Heatmap Legend&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\"&gt;\n  &lt;script src=\"https://code.jquery.com/jquery-1.12.4.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n  $( function() {\n    $( \"#maplegend\" ).draggable({\n        start: function (event, ui) {\n            $(this).css({ right: \"auto\", top: \"auto\", bottom: \"auto\" });\n        }\n    });\n  });\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id='maplegend' class='maplegend' \n    style='position: absolute; z-index:9999; border:2px solid grey; background-color:rgba(255, 255, 255, 0.8);\n     border-radius:6px; padding: 10px; font-size:14px; right: 20px; bottom: 20px;'&gt;\n     \n&lt;div class='legend-title'&gt;Legend&lt;/div&gt;\n&lt;div class='legend-scale'&gt;\n  &lt;ul class='legend-labels'&gt;\n    &lt;li&gt;&lt;span style='background:red;opacity:0.7;'&gt;&lt;/span&gt;AF Active&lt;/li&gt;\n    &lt;li&gt;&lt;span style='background:magenta;opacity:0.7;'&gt;&lt;/span&gt;AF Reserve&lt;/li&gt;\n    &lt;li&gt;&lt;span style='background:green;opacity:0.7;'&gt;&lt;/span&gt;AF Guard&lt;/li&gt;\n    &lt;li&gt;&lt;span style='background:#000000;opacity:0.7;'&gt;&lt;/span&gt;Heatmap Intensity&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n&lt;style type='text/css'&gt;\n  .maplegend .legend-title {\n    text-align: left;\n    margin-bottom: 5px;\n    font-weight: bold;\n    font-size: 90%;\n    }\n  .maplegend .legend-scale ul {\n    margin: 0;\n    padding: 0;\n    float: left;\n    list-style: none;\n    }\n  .maplegend .legend-scale ul li {\n    font-size: 80%;\n    list-style: none;\n    margin-left: 0;\n    line-height: 18px;\n    margin-bottom: 2px;\n    }\n  .maplegend ul.legend-labels li span {\n    display: block;\n    float: left;\n    height: 16px;\n    width: 30px;\n    margin-right: 5px;\n    margin-left: 0;\n    border: 1px solid #999;\n    }\n  .maplegend .legend-source {\n    font-size: 80%;\n    color: #777;\n    clear: both;\n    }\n  .maplegend a {\n    color: #777;\n    }\n&lt;/style&gt;\n{% endmacro %}\n\"\"\"\n\n# Add the legend to the map\nmacro = MacroElement()\nmacro._template = Template(template)\nmap_hooray.get_root().add_child(macro)\n\n# Display the map\nmap_hooray\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site is created to share insights and updates about our social data project. Stay tuned for more information and findings!"
  },
  {
    "objectID": "Plots/dummyfil.html",
    "href": "Plots/dummyfil.html",
    "title": "Social data analysis and visualization project",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ndata = pd.read_csv(\"../Website/data/complete.csv\", on_bad_lines='skip')\ndata['datetime'] = pd.to_datetime(data['datetime'], errors='coerce')\ndf=data[data[\"country\"]==\"us\"].sort_index(level=\"datetime\")\ndf = df.dropna(subset=['datetime'])\ndf = df.sort_values(by='datetime').reset_index(drop=True)\ndf=df.dropna()\n\nC:\\Users\\anton\\AppData\\Local\\Temp\\ipykernel_56424\\2986948956.py:4: DtypeWarning: Columns (5,9) have mixed types. Specify dtype option on import or set low_memory=False.\n  data = pd.read_csv(\"../Website/data/complete.csv\", on_bad_lines='skip')\n\n\n\nhourtime=df[\"time\"]=df[\"datetime\"].dt.hour\nplt.hist(hourtime, bins=24, range=(0, 24), density=True, alpha=0.5, color='blue')\nplt.xlabel('Hour of the Day')\n\nText(0.5, 0, 'Hour of the Day')"
  }
]