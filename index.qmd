---
title: "What is the cause of the increase in UFO sightings?"
subtitle: And can we see it in the data?
bibliography: references.bib
from: markdown+emoji
format:
  html:
    code-fold: true
jupyter: python3
---
Since the beginning of the 20th century we have reported UFO sightings. What this project is trying to do is to look at the trend of the UFO sightings and try to explain them in a way which is not attributed to an increase in actual UFOs. Since a major part of the sightings are in the US (which already indicates that something weird is up) we are only focusing on that part of the data.

### Time series plot
The first thing we want to examine is the trend of UFO sightings over the years. We choose to look at only the sightings from 1990 and further since the number of sightings is fairly low up until that point and therefore there is no meaningful insight to gain. We also look at the particular shapes of sighings and lastly we plotted some important UFO related media too see if they might contribute to the increase.
```{python}
#| error: false
#| warning: false
#| message: false

import pandas as pd
from bokeh.plotting import figure, show
from bokeh.io import output_notebook
from bokeh.models import ColumnDataSource, HoverTool, LabelSet
from bokeh.palettes import Category20

# Render inline
output_notebook(hide_banner=True)

# === Load & preprocess ===
data = pd.read_csv("data/complete.csv", on_bad_lines='skip')
data["datetime"] = pd.to_datetime(data["datetime"], errors="coerce")
df = (
    data[data["country"].str.lower() == "us"]
    .dropna(subset=["datetime", "shape"])
    .copy()
)
df["year"] = df["datetime"].dt.year

# === Totals from 1990–2014 ===
totals = df.groupby("year").size()
totals = totals[(totals.index >= 1990) & (totals.index <= 2014)]

# === Shape pivot from 1990–2014 ===
shape_counts_all = df.groupby(["year", "shape"]).size().unstack(fill_value=0)
shape_counts_all = shape_counts_all[
    (shape_counts_all.index >= 1990) &
    (shape_counts_all.index <= 2014)
]

# === Top 5 shapes + “uncommon shapes” ===
shape_totals = shape_counts_all.sum().sort_values(ascending=False)
top_shapes    = shape_totals.head(5).index
other_shapes  = shape_totals.index.difference(top_shapes)

shape_counts = shape_counts_all[top_shapes].copy()
shape_counts["uncommon shapes"] = shape_counts_all[other_shapes].sum(axis=1)

# === Prepare ColumnDataSource ===
final_shapes = ["uncommon shapes"] + list(top_shapes)
source_data  = {"year": shape_counts.index.tolist()}
#colors       = Category20[20][:len(final_shapes)]
colors = [
    "#f0ad4e",  # yellow  → "uncommon shapes"
    "#007bff",  # blue    → top shape 1
    "#fd7e14",  # orange  → top shape 2
    "#6f42c1",  # purple  → top shape 3
    "#d9534f",   # red     → top shape 5
    "#4bbf73"  # green    → top shape 4
    
]
for s in final_shapes:
    source_data[s] = shape_counts[s].values
source = ColumnDataSource(source_data)

# === Emoji map ===
emoji_map = {
    "light": "💡", "triangle": "🔺", "circle": "⭕",
    "fireball": "🔥", "unknown": "❓", "uncommon shapes": "🛸"
}

# === Media events 1990–2014 ===
media = {
    1951: "The Day the Earth Stood Still",
    1977: "Close Encounters", 1979: "Alien", 1982: "E.T.",
    1986: "Aliens", 1993: "The X-Files (TV)", 1996: "Independence Day",
    1998: "X-Files: The Movie", 2002: "Signs",
    2009: "District 9", 2014: "Edge of Tomorrow"
}
media_years = [y for y in media if 1990 <= y <= 2014 and y in totals.index]
media_source = ColumnDataSource(dict(
    year =[y for y in media_years],
    count=[totals[y] for y in media_years],
    title=[media[y] for y in media_years]
))

# === Figure setup ===
p = figure(
    width=640, height=400,
    x_range=(1990, 2014),
    y_range=(0, shape_counts.sum(axis=1).max() * 1.15),
    background_fill_color="#f5f5f5",
    title="U.S. UFO Shape Distribution Over Time (1990–2014)",
    tools="", toolbar_location=None
)

# === Stacked area ===
p.varea_stack(
    stackers=final_shapes,
    x="year",
    color=colors,
    legend_label=[f"{emoji_map[s]} {s}" for s in final_shapes],
    source=source
)
p.legend.items = list(reversed(p.legend.items))

# === Media event markers ===
media_renderer = p.circle(
    'year','count', source=media_source,
    size=12, fill_color="#ffd700", line_color="white",
    line_width=1.3, legend_label="Media Event", level="overlay"
)
p.add_tools(HoverTool(
    renderers=[media_renderer],
    tooltips=[("Movie", "@title"), ("Year","@year"), ("Sightings","@count")],
    mode="mouse", point_policy="follow_mouse"
))

# === Emojis ===
recent = shape_counts.tail(25)
max_h  = recent.sum(axis=1).max()
x_pts, y_pts, emojis, sizes = [], [], [], []
for i, s in enumerate(final_shapes):
    yr    = recent[s].idxmax()
    below = recent[final_shapes[:i]].loc[yr].sum()
    band  = recent[s].loc[yr]
    x_pts.append(yr)
    y_pts.append(below + band/2)
    emojis.append(emoji_map[s])
    sizes.append(f"{10 + band/max_h*16 - 4:.0f}pt")

emoji_source = ColumnDataSource(dict(x=x_pts, y=y_pts, emoji=emojis, size=sizes))
p.add_layout(LabelSet(
    x='x', y='y', text='emoji', source=emoji_source,
    text_font_size='size', text_align="center", text_baseline="middle"
))

# === Styling ===
p.xaxis.axis_label            = "Year"
p.yaxis.axis_label            = "Sightings"
p.xaxis.major_label_text_color = "#000"
p.yaxis.major_label_text_color = "#000"
p.xaxis.axis_line_color       = "#000"
p.yaxis.axis_line_color       = "#000"
p.xgrid.grid_line_color       = None
p.ygrid.grid_line_color       = "#222244"
p.title.text_color            = "#000"
p.title.text_font_size        = "12pt"
p.legend.label_text_color     = "#000000"
p.legend.background_fill_alpha=  1
p.legend.location             = "top_left"
p.legend.label_text_font_size = "9pt"

# Show it
show(p)
```
**Figure 1:** Times series plot which shows the distribution of the different shapes and sightings, but also highlights some important dates in regards to UFO-related media releases. There has been a rather large increase over the year. In particular after the release of "independence day" and the the show x-files.

To more clearly see the distribution of the different shapes over the years we also look at a pie-chart. 

```{python}
#| error: false
#| warning: false
#| message: false
from bokeh.io import output_notebook, show
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource, Slider, CustomJS, Div
from bokeh.layouts import column, row
import pandas as pd
import numpy as np
from math import pi, cos, sin

output_notebook(hide_banner=1)

# === Load and preprocess data ===
df = pd.read_csv('data/complete.csv', on_bad_lines='skip', dtype=str)
df['datetime'] = pd.to_datetime(df['datetime'], errors='coerce')
df = df.dropna(subset=['datetime'])
df['year'] = df['datetime'].dt.year.astype(int)
df['shape'] = df['shape'].fillna('UNKNOWN').str.upper()
df = df[(df['year'] >= 1990) & (df['year'] <= 2014)]
df = df[df['shape'] != 'OTHER']  # ✅ REMOVE "OTHER" COMPLETELY

# === Determine top shapes ===
years = list(range(1990, 2015))
top_shapes = set()
for y in years:
    excluded_shapes = {'CIGAR', 'FORMATION',"RECTANGLE"}
    cnts = df[(df['year'] == y) & (~df['shape'].isin(excluded_shapes))]['shape'].value_counts()
    top_shapes |= set(cnts.index[:7])
top_shapes = sorted(top_shapes)

# === Emoji & Color Map ===
emoji_map = {
    'CIRCLE': '⭕',
    'DISK': '💿',
    'FIREBALL': '🔥',
    'LIGHT': '💡',
    'OVAL': '🥚',
    'SPHERE': '🔵',
    'TRIANGLE': '🔺',
    'UNKNOWN': '❓',
    'Uncommon Shapes': '🛸'
}

# ✅ MANUAL COLOR ASSIGNMENT (customize here)
color_map = {
    'CIRCLE': "#6610f2",
    'DISK': "#1f9bcf",
    'FIREBALL': "#d9534f",
    'LIGHT': "#007bff",
    'OVAL': "#6f42c1",
    'SPHERE': "#20c997",
    'TRIANGLE': "#fd7e14",
    'UNKNOWN': "#4bbf73",
    'Uncommon Shapes': "#f0ad4e"
}

# === Prepare data per year ===
data_by_year = {}
for y in years:
    cnts = df[df['year'] == y]['shape'].value_counts()
    top7 = cnts.iloc[:7]
    uncommon = cnts.iloc[7:].sum()
    labels = list(top7.index)
    values = list(top7.values)
    if uncommon > 0:
        labels.append('Uncommon Shapes')
        values.append(uncommon)
    total = sum(values)

    angles = [v / total * 2 * pi for v in values]
    starts = np.cumsum([0] + angles[:-1])
    ends = starts + angles
    mids = starts + np.array(angles) / 2

    x_inner = 0.6 * np.cos(mids)
    y_inner = 1 + 0.6 * np.sin(mids)

    pct_vals = [v / total * 100 for v in values]
    emoji_pct = [
        f"{emoji_map.get(lbl, '')}\n{p:.1f}%" if p >= 10 else f"{emoji_map.get(lbl, '')}"
        for lbl, p in zip(labels, pct_vals)
    ]

    data_by_year[str(y)] = {
        'start_angle': starts.tolist(),
        'end_angle': ends.tolist(),
        'color': [color_map.get(lbl, "#cccccc") for lbl in labels],
        'emoji_pct': emoji_pct,
        'x_inner': x_inner.tolist(),
        'y_inner': y_inner.tolist(),
        'label': labels
    }

# === Initial Year Setup ===
initial = years[0]
src = ColumnDataSource(data_by_year[str(initial)])

# === Figure ===
p = figure(height=460, width=458,
           title=f"UFO Shapes in {initial}",
           toolbar_location=None,
           x_range=(-1.2, 1.2), y_range=(0, 2.4),background_fill_color="#f5f5f5")

p.wedge(x=0, y=1, radius=0.9,
        start_angle='start_angle', end_angle='end_angle',
        fill_color='color', line_color='white',
        source=src)

p.text(x='x_inner', y='y_inner', text='emoji_pct',
       source=src,
       text_align='center', text_baseline='middle',
       text_font_size='12pt')

p.axis.visible = False
p.grid.visible = False
p.xaxis.axis_line_color= "#333333"
# === Slider ===
slider = Slider(start=years[0], end=years[-1], value=initial, step=1, title="Year")

callback = CustomJS(args=dict(src=src, data_by_year=data_by_year, plot=p, slider=slider), code="""
    const yr = slider.value.toString();
    const d = data_by_year[yr];
    src.data = d;
    plot.title.text = 'UFO Shapes in ' + yr;
    src.change.emit();
""")
slider.js_on_change('value', callback)

# === Legend as HTML (aligned beside the chart) ===
legend_html = "<div style='font-size: 14px; line-height: 1.6em;'>"
for shape in top_shapes + ['Uncommon Shapes']:
    emoji = emoji_map.get(shape, '')
    color = color_map.get(shape, '#999999')
    label = shape.lower()
    legend_html += f"""
        <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 6px;">
            <div style="width: 14px; height: 14px; background-color: {color}; border-radius: 3px; flex-shrink: 0;"></div>
            <span>{emoji} {label}</span>
        </div>
    """
legend_html += "</div>"
legend_div = Div(text=f"<div style='margin-left:20px; margin-top:30px'>{legend_html}</div>", width=160)

# === Layout ===
layout = column(slider, row(p, legend_div))
show(layout)

```
**Figure 2:** The pie-chart shows the different shapes of the reported UFOs. "Uncommon shapes" refers to the sum of all the different shapes which are to few to be their own category and is therefore often the biggest category. The real biggest category is light. This makes one suspect that a lot of the sightings may be from air craft at night. 


The time-series plot above illustrates the number of reported UFO sightings in the United States from 1990 to 2014. Overall, there is a clear upward trend in the number of sightings over the years, peaking around 2012–2013. Notably, a sharp decline in sightings is observed after 2013. This drop is not necessarily indicative of a real-world change in UFO activity, but rather reflects the structure of the dataset, which ends around mid-September 2013. Thus, the apparent decline is primarily due to incomplete data.

The peak around 2012–2013 may be attributed to a combination of cultural and technological factors. According to an article in Astronomy titled “Reports of rising UFO sightings are greatly exaggerated,” the widespread use of smartphone cameras without mechanical shutters may introduce image artifacts, such as blurring and smearing, which could contribute to mistaken sightings. Additionally, the “2012 phenomenon” a widely circulated belief that the year 2012 would mark a significant transformation or apocalyptic event may have heightened public sensitivity and made individuals more prone to misinterpret ordinary visual stimuli as extraordinary. 

The plot also includes a frequency distribution of reported UFO shapes between 1990 and 2014. While most shapes appear consistently reported over time, there is a noticeable spike in reports of “unknown” shapes around 1995. This anomaly suggests a temporary increase in sightings where witnesses were unable or unwilling to classify the object’s form, possibly due to ambiguity in observations or growing public discourse about UFOs during that period.

To understand the broader pattern of increasing sightings from the 1990s to the early 2010s, one must consider external societal trends. Data from the International Civil Aviation Organization (ICAO)@icao_world_economy suggest a steady increase in global air traffic, as indicated by rising Revenue Passenger-Kilometres (RPKs). Although the data do not directly reflect the number of flights, they imply a growing presence of aerial vehicles in the skies, which may increase the likelihood of misidentifying conventional aircraft as unidentified flying objects.

Additionally, the influence of pop culture is clearly visible. Markers on the time-series plot indicate the release of major alien-themed media, such as The X-Files and Independence Day. These releases coincide with noticeable spikes in UFO sightings, suggesting that media exposure may influence public perception and increase observational activity. This idea is supported by a CBC article titled “Record British UFO sightings in 1990s” @cbc_british_ufo_sightings which asserts that such media events raise public awareness and curiosity, leading to more frequent UFO reports.

### Hour of the day
```{python}

#| error: false
#| warning: false
#| message: false
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
data = pd.read_csv("data/complete.csv", on_bad_lines='skip')
data['datetime'] = pd.to_datetime(data['datetime'], errors='coerce')
df=data[data["country"]=="us"].sort_index(level="datetime")
df = df.dropna(subset=['datetime'])
df = df.sort_values(by='datetime').reset_index(drop=True)
df=df.dropna()

plt.figure().set_figwidth(7.5)
ax=plt.gca()
plt.xticks(np.arange(0, 25, 1))
ax.set_facecolor("#f5f5f5")


#ax.xaxis.grid(False)
#ax.grid(True,axis="y", zorder=1)
hourtime=df["time"]=df["datetime"].dt.hour
plt.hist(hourtime, bins=24, range=(0, 24), density=0, color='#007bff',zorder=4)
ax.grid(True, axis="y",linestyle='-', alpha=0.7,color="#222244",zorder=0)
plt.xlim(0,24)
plt.xlabel('Hour of the Day')
plt.show()
```
**Figure 3:** This figure shows the the number of sightings per hour. It is clear that the sightings are mostly a thing of the evening/night. This also makes sense considering that a lot of the sightings are light.

What happens when we shift our focus to when these sightings occur throughout the day?

As shown in Figure 3, the majority of sightings are clustered between 20:00 and 24:00, with a noticeable peak at 22:00. Several factors might account for this trend. Referring back to Figure 2, we see that the most commonly reported UFO shape is simply described as “light.” This aligns neatly with what we might expect after all, the stark contrast between a dark night sky and any bright object makes such lights far more noticeable. It is the same principle, that makes stars visible at night.

Why 22:00 in particular? It appears to represent an optimal balance. By this hour, the sky is fully dark, providing ideal conditions for spotting shining objects against a dark backdrop. At the same time, it is still within a reasonable timeframe when many people are likely to be outdoors. In contrast, sightings tend to decline past midnight, likely due to reduced human presence and decreased observational activity during the early morning hours.

### Heatmap 
Now we want to explore a different angle, we therefore wish to plot the geographical data. This results in a heat map. Along with the sighting distribution the heat map also contains airforce bases, in order to explore Air Force flights influence on UFO sightings. We suspect that aircrafts in particular might often be mistaken for UFO and in particular aircrafts from military bases. Since the often travel in more secrecy and might not have the usual look of an airplane.The heat map will only contain Air Force bases, despite other branches of the U.S Military containing aircraft, due to simplicity as it would be impossible to distinguish between an Army Airbase, and an regular infantry base. 
 
```{python}
#| error: false
#| warning: false
#| message: false

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from folium import plugins
from folium.plugins import HeatMap
import folium
from branca.element import Template, MacroElement

data = pd.read_csv("data/complete.csv", on_bad_lines='skip')
data['datetime'] = pd.to_datetime(data['datetime'], errors='coerce')
df=data[data["country"]=="us"].sort_index(level="datetime")
df = df.dropna(subset=['datetime'])
df = df.sort_values(by='datetime').reset_index(drop=True)
df=df.dropna()

milbases=pd.read_csv("data/clean_military_bases.csv")
milcomp=milbases["component"]
letters=[i[0:2] for i in milbases["component"]]

milbases=milbases[(milcomp=="AF Guard" ) |(milcomp=="AF Reserve" )| (milcomp=="AF Active")]

milbasesl=milbases[["latitude","longitude"]]

# Create your map
map_hooray = folium.Map(location=[40.80887462217925, -101.64736435756755], zoom_start=4)

# Process your heatmap data
df['latitude'] = df['latitude'].astype(float)
df['longitude'] = df['longitude'].astype(float)
heat_df = df[['latitude', 'longitude']].dropna()
heat_data = [[row['latitude'], row['longitude']] for index, row in heat_df.iterrows()]

# Add heatmap with adjusted parameters for less density
HeatMap(
    heat_data,
    radius=5,             # smaller spread
    blur=1,               # smoother blending
    max_opacity=0.5,       # reduce color saturation
    min_opacity=0.3,       # allow fade for low-density areas
    use_local_extrema=False  # keep global scale
).add_to(map_hooray)

# Add circle markers for different components
for index, row in milbasesl[milcomp == "AF Reserve"].iterrows():
    folium.CircleMarker(
        location=[row['latitude'], row['longitude']],
        radius=3,
        color='#6610f2',
        fill=True,
        fill_color='#6610f2',
        fill_opacity=0.6
    ).add_to(map_hooray)

for index, row in milbasesl[milcomp == "AF Active"].iterrows():
    folium.CircleMarker(
        location=[row['latitude'], row['longitude']],
        radius=3,
        color='#007bff',
        fill=True,
        fill_color='#007bff',
        fill_opacity=0.6
    ).add_to(map_hooray)

for index, row in milbasesl[milcomp == "AF Guard"].iterrows():
    folium.CircleMarker(
        location=[row['latitude'], row['longitude']],
        radius=3,
        color='#09772f',
        fill=True,
        fill_color='#09772f',
        fill_opacity=0.6
    ).add_to(map_hooray)

# Custom legend (unchanged)
template = """
{% macro html(this, kwargs) %}
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Heatmap Legend</title>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script>
  $( function() {
    $( "#maplegend" ).draggable({
        start: function (event, ui) {
            $(this).css({ right: "auto", top: "auto", bottom: "auto" });
        }
    });
  });
  </script>
</head>
<body>
<div id='maplegend' class='maplegend' 
    style='position: absolute; z-index:9999; border:2px solid grey; background-color:rgba(255, 255, 255, 0.8);
     border-radius:6px; padding: 10px; font-size:14px; right: 20px; bottom: 20px;'>
     
<div class='legend-title'>Legend</div>
<div class='legend-scale'>
  <ul class='legend-labels'>
    <li><span style='background:#6610f2;opacity:0.7;'></span>AF Active</li>
    <li><span style='background:#007bff;opacity:0.7;'></span>AF Reserve</li>
    <li><span style='background:#09772f;opacity:0.7;'></span>AF Guard</li>
  </ul>
</div>
</div>
</body>
</html>

<style type='text/css'>
  .maplegend .legend-title {
    text-align: left;
    margin-bottom: 5px;
    font-weight: bold;
    font-size: 90%;
    }
  .maplegend .legend-scale ul {
    margin: 0;
    padding: 0;
    float: left;
    list-style: none;
    }
  .maplegend .legend-scale ul li {
    font-size: 80%;
    list-style: none;
    margin-left: 0;
    line-height: 18px;
    margin-bottom: 2px;
    }
  .maplegend ul.legend-labels li span {
    display: block;
    float: left;
    height: 16px;
    width: 30px;
    margin-right: 5px;
    margin-left: 0;
    border: 1px solid #999;
    }
  .maplegend .legend-source {
    font-size: 80%;
    color: #777;
    clear: both;
    }
  .maplegend a {
    color: #777;
    }
</style>
{% endmacro %}
"""

# Add the legend to the map
macro = MacroElement()
macro._template = Template(template)
map_hooray.get_root().add_child(macro)

# Display the map
map_hooray
```
**Figure 4:** The heatmap shows looks at the locations of the reported sightnings. We have included the location of different military air force bases. It seems that there often are a lot of sightings around big cities which also sometimes have airforce bases. But sometimes places where there is only airforce bases also sees an increase in sightings

Figure 4 reveals a clear pattern: regions in proximity to active airbases tend to exhibit a high density of UFO sightings. One plausible explanation is that these sightings may, in fact, correspond to military aircraft activity. Given that military aircraft are routinely operated near their bases regardless of weather conditions or time of day it is not unreasonable to assume that experimental or unfamiliar aircraft flying at night could be mistaken for unidentified flying objects by unsuspecting observers. Since airbases are geographically fixed, such misidentifications would naturally accumulate in the same locations over time, resulting in noticeable clusters of sightings. This is also what we see in some of the states with low population but still fine number of UFO sightings. 

Another notable observation from Figure 4 is the clear disparity in the density and distribution of UFO sightings between the eastern and western regions of the United States. Sightings appear to be significantly more frequent in the east, where high density areas form a nearly continuous band across much of the region. This pattern is especially pronounced around major metropolitan centers such as New York, Chicago, and Washington, D.C, where sightings are heavily clustered. In contrast, the western United States shows a markedly different pattern. Sightings in this region are largely confined to the coasts and major urban centers, including cities like Los Angeles and San Francisco. Vast interior areas of the west, including parts of the Rocky Mountains and Great Basin, exhibit little to no reported activity.

We suspect the reason between this great disparity, is most likely population size and density. As we mentioned two large areas of the west ie. The Rocky Mountains and Great Basin has almost no sightings reported. These two areas are also very sparsely populated, while coastal and urban centers such as Los Angeles, San Francisco, Seattle, Salt Lake City and Denver still report large amounts of sightings. This could indicate that reported UFO sightings are correlated with population size and maybe not so much correlated with military bases. It is also a bit difficult to see this since a lot of the military bases are around cities. We still see states with low population, which has spikes of sightings around military bases but not a significant amount enough to be conclusive about.


### Correlation between 
The heatmap suggest that there is a fairly stark correlation between population and number of sigtings. This is something we want look into in the following plots. First we take a look at the correlation between populaton and sighitngs for all states and years.
```{python}

#| error: false
#| warning: false
#| message: false
import pandas as pd
from bokeh.plotting import figure, show, output_notebook
from bokeh.models import ColumnDataSource, CustomJS, HoverTool, TapTool
from bokeh.palettes import viridis

output_notebook(hide_banner=1)

excluded = {'pr', 'dc'}

# Load and clean population data
data = pd.read_csv("data/historical_state_population_by_year.csv", on_bad_lines='skip')
data = data[(data['year'] >= 1950) & (data['year'] <= 2014)]
data["state"] = data["state"].str.lower()
data = data[data["state"].isin(excluded) == False]
data = data.dropna(subset=['state'])

# Load and clean UFO data
df = pd.read_csv("data/complete.csv", on_bad_lines='skip')
df['datetime'] = pd.to_datetime(df['datetime'], errors='coerce')
df = df[df["country"] == "us"]
df = df[df["state"].isin(excluded) == False]
df = df.dropna(subset=['datetime'])
df['year'] = df['datetime'].dt.year
df = df[(df['year'] >= 1950) & (df['year'] <= 2014)]

# Group and merge
grouped = df.groupby(['state', 'year']).size().reset_index(name='num_sightings')
all_states = sorted(df['state'].unique())
all_years = range(1950, 2015)
full_index = pd.MultiIndex.from_product([all_states, all_years], names=['state', 'year'])
sightings_summary = grouped.set_index(['state', 'year']).reindex(full_index, fill_value=0).reset_index()
merged = pd.merge(data, sightings_summary, on=['state', 'year']).dropna(subset=['population', 'num_sightings'])
merged['population'] = merged['population'] / 1_000_000
# Use a colorblind-friendly palette
colorblind_palette = [
    "#007bff",  # blue
    "#6610f2",  # indigo
    "#6f42c1",  # purple
    "#e83e8c",  # pink
    "#d9534f",  # red
    "#fd7e14",  # orange
    "#f0ad4e",  # yellow
    "#4bbf73",  # green
    "#20c997",  # teal
    "#1f9bcf"   # cyan
]

extended_palette = (colorblind_palette * ((len(all_states) // len(colorblind_palette)) + 1))[:len(all_states)]
state_color_map = dict(zip(all_states, extended_palette))

merged['color'] = merged['state'].map(state_color_map)
merged['alpha'] = [0.6] * len(merged)

source = ColumnDataSource(merged)

# Plot setup
p = figure(title="UFO Sightings vs Population (1950–2014)",
           x_axis_label="Population", y_axis_label="Number of Sightings",
           tools="pan,wheel_zoom,box_zoom,reset,tap,hover",
           width=640, height=600,background_fill_color="#f5f5f5")

# Draw points
p.circle('population', 'num_sightings',
         source=source,
         size=6,
         color='color',
         alpha='alpha',
         line_color=None)

# Hover tool: passive inspection
hover = p.select_one(HoverTool)
hover.tooltips = [
    ("State", "@state"),
    ("Year", "@year"),
    ("Population", "@population{0,0}"),
    ("Sightings", "@num_sightings")
]

# Tap tool: highlights all from the clicked state
tap_callback = CustomJS(args=dict(source=source), code="""
    const selected = source.selected.indices[0];
    const data = source.data;
    const N = data['state'].length;

    if (selected == null) return;

    const selected_state = data['state'][selected];

    for (let i = 0; i < N; i++) {
        data['alpha'][i] = (data['state'][i] === selected_state) ? 1.0 : 0.1;
    }
    source.change.emit();
""")

taptool = p.select_one(TapTool)
taptool.callback = tap_callback

show(p)
```
**Figure 5:** A chart which shows the UFO sightings over population over the last from 1950 to 2014. The different states are highligthed with different colors. One sees that there is a lot of smaller populations which does not have that many sightings. One also sees that some states have seen a major increase in sigthings even though there population remained rather stable

We are also interested in just looking at particular years.
```{python}
#| error: false
#| warning: false
#| message: false
from bokeh.io import output_notebook, show
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource, Slider, CustomJS
from bokeh.layouts import column
from sklearn.linear_model import LinearRegression
import pandas as pd
import numpy as np
import json

output_notebook(hide_banner=True)

# Load and clean population data
excluded = {'pr', 'dc'}
data = pd.read_csv("data/historical_state_population_by_year.csv", on_bad_lines='skip')
data = data[(data['year'] >= 1950) & (data['year'] <= 2014)]
data["state"] = data["state"].str.lower()
data = data[~data["state"].isin(excluded)]
data = data.dropna(subset=['state'])

# Load and clean sightings data
df = pd.read_csv("data/complete.csv", on_bad_lines='skip')
df['datetime'] = pd.to_datetime(df['datetime'], errors='coerce')
df = df[df["country"] == "us"]
df = df[~df["state"].isin(excluded)]
df = df.dropna(subset=['datetime'])
df = df.sort_values(by='datetime').reset_index(drop=True)
df['year'] = df['datetime'].dt.year
df = df[(df['year'] >= 1950) & (df['year'] <= 2014)]

# Group by state and year
grouped = df.groupby(['state', 'year']).size().reset_index(name='num_sightings')

# Create complete grid
all_states = df['state'].unique()
all_years = range(1950, 2015)
full_index = pd.MultiIndex.from_product([all_states, all_years], names=['state', 'year'])
sightings_summary = grouped.set_index(['state', 'year']).reindex(full_index, fill_value=0).reset_index()

# Merge datasets
merged = pd.merge(data, sightings_summary, on=['year', 'state'])

# Compute correlation per year
state_correlations = merged.groupby('year').apply(
    lambda g: g['population'].corr(g['num_sightings'])
).reset_index(name='correlation')

# Prepare Bokeh data structures
year_data = {}
plot_meta = {}

for year in sorted(merged['year'].unique()):
    df_year = merged[merged['year'] == year]
    x = df_year['population'].values/1000000
    y = df_year['num_sightings'].values

    if len(x) > 1:
        model = LinearRegression()
        model.fit(x.reshape(-1, 1), y)
        y_pred = model.predict(x.reshape(-1, 1))
        slope = model.coef_[0]
        intercept = model.intercept_
        ss_res = np.sum((y - y_pred) ** 2)
        ss_tot = np.sum((y - np.mean(y)) ** 2)
        r2 = 1 - ss_res / ss_tot
    else:
        y_pred = np.zeros_like(x)
        slope = intercept = r2 = 0

    corr = state_correlations[state_correlations['year'] == year]['correlation'].values[0]

    year_data[str(year)] = {
        'x': x.tolist(),
        'y': y.tolist(),
        'y_pred': y_pred.tolist()
    }

    plot_meta[str(year)] = {
        'title': f"UFO Sightings vs Population - {year} | Correlation = {corr:.2f}"
    }

# Bokeh plotting
initial_year = "1987"
source = ColumnDataSource(data=year_data[initial_year])

p = figure(height=400, width=640,
           title=plot_meta[initial_year]['title'],
           x_axis_label='Population (per milion)', y_axis_label='Number of Sightings',background_fill_color="#f5f5f5")

p.circle('x', 'y', size=8, source=source,color="#007bff")
p.line('x', 'y_pred', source=source, line_width=2, 
color='#d9534f')

#p.legend.location = "top_left"

# Slider and JS Callback
slider = Slider(start=merged['year'].min(), end=merged['year'].max(), value=int(initial_year), step=1, title="Year")

callback = CustomJS(args=dict(source=source, slider=slider, plot=p),
    code=f"""
        const year_data = {json.dumps(year_data)};
        const meta = {json.dumps(plot_meta)};
        const year = slider.value.toString();

        source.data = year_data[year];
        plot.title.text = meta[year].title;
        source.change.emit();
    """
)

slider.js_on_change('value', callback)

show(column(slider, p))
```
**Figure 6:**A correlation plot over the years looking at the different states population and sightings for a chosen year. We see a rather strong correlation between the two for most years. This in turn explains our heatmap

An examination of Figures 5 and 6 supports the hypothesis that reported UFO sightings are positively correlated with population size. This relationship is most evident in the year 2008, which shows the highest correlation coefficient of 0.96 between state population and the number of reported sightings. In contrast, the year 1951 exhibits the lowest correlation, with a coefficient of just 0.34. But this might as well be because of a lack of datapoints. Overall, the early years of the dataset, particularly the first two decades, display a relatively weak correlation between population and sightings. However, beginning in the 1970s, the correlation becomes significantly stronger and more consistent.

This trend may be attributed to the growing influence of popular culture during that time. The 1970s marked a rise in public interest in UFOs and extraterrestrial life, largely driven by the emergence of films, television shows, and books that featured such themes. As these topics entered mainstream entertainment, public awareness and curiosity about UFOs likely increased. Moreover, the depiction of UFO sightings in media may have contributed to a gradual reduction in the stigma or taboo associated with reporting such events.

It is plausible that in the earlier decades, individuals were more hesitant to report sightings due to fear of ridicule or disbelief. As cultural perceptions shifted and UFO phenomena became more widely discussed and accepted, people may have felt more comfortable coming forward with their observations. Thus, the strengthening correlation over time could reflect not only population growth but also a growing willingness to report sightings, influenced by evolving social and cultural attitudes. 

The previously mentioned factors help explain the overall increase in reported UFO sightings but do not fully account for the growing correlation between population size and sightings over time. To better understand this trend, it is useful to consider how observation conditions vary with geography. Interestingly, some of the best locations in the United States for observing the night sky are in sparsely populated areas, particularly in the western region. According to World Atlas@worldatlas_stargazing, four out of the six top-rated stargazing locations in the U.S. are in the West, with many of them situated in desert environments. These areas offer minimal light pollution and clear, unobstructed skies ideal conditions for observing aerial activity.

This suggests that in the earlier decades of the dataset, sightings may have been more likely to occur in these open and remote areas, where sky visibility is optimal but population density is low. As a result, even though sightings occurred, they were less frequent overall and less likely to be reported or to reflect population trends. Over time, as public interest in UFOs increased and reporting became more socially acceptable, sightings in more populated areas began to rise, thereby increasing the observed correlation with population. Thus, the shift in both where and how often people reported sightings may explain the growing alignment between population size and UFO sighting frequency.

### Conclusion
We have now looked into the UFO sighting data in order to conclude if it were possible to come up with some explanations for the increase on UFO sightings over the years. We saw that releases such as "independence day" and "x-files" might have an impact since the sighting increased around there time of relesase together with the fact that it makes it more socially acceptable to report UFO sigthings. Another observation was that population and number of sigthigns were greatly correlated and togehter with the fact that most of the sightings were after dark and "light". One then might suspect that a lot of the UFO's where in fact aircrafts. This is even more likely since the number of aircraft over the years has also significantly increased as reported by ICAO. This in turn also explain why there were an increase of sightings around airforce bases. Because of the fact that there often were more densely populated rather than conclusively leading to an increase in sightings which we initally suspected. 